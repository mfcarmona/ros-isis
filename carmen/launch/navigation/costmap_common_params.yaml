# maximum range sensor reading that will result in an obstacle being put into the costmap.
obstacle_range: 2.5

# range to which we will raytrace freespace given a sensor reading
raytrace_range: 3.0

# footprint of the robot, the center of the robot is assumed to be at (0.0, 0.0) and both clockwise and counterclockwise specifications are supported
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]

# footprint if it is circular
robot_radius: 0.7

# maximum distance from obstacles at which a cost should be incurred. For example, setting the inflation radius at 0.55 meters means that the robot will treat all paths that stay 0.55 meters or more away from obstacles as having equal obstacle cost
inflation_radius: 0.75

# list of sensors that are going to be passing information to the costmap separated by spaces. 
observation_sources:  base_scan_0  base_scan_1


# "frame_name" :name of the coordinate frame of the sensor, 
# "data_type" :LaserScan - PointCloud
# "topic_name" name of the topic that the sensor publishes data on. 
# "marking" and "clearing" determine whether the sensor will be used to add obstacle information to the costmap, clear obstacle information from the costmap, or do both.
#point_cloud_sensor: {sensor_frame: frame_name, data_type: PointCloud, topic: topic_name, marking: true, clearing: true}

base_scan_0: {data_type: LaserScan, topic: /base_link/base_scan_0, expected_update_rate: 0.4,
  observation_persistence: 0.0, marking: true, clearing: true, max_obstacle_height: 0.4, min_obstacle_height: 0.08}
base_scan_1: {data_type: LaserScan, topic: /base_link/base_scan_1, expected_update_rate: 0.4,
  observation_persistence: 0.0, marking: true, clearing: true, max_obstacle_height: 0.4, min_obstacle_height: 0.08}

